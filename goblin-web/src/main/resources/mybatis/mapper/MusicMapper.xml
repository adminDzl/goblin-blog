<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="xyz.guqing.goblin.mapper.MusicMapper" >
  <resultMap id="BaseResultMap" type="xyz.guqing.goblin.entity.Music" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="url" property="url" jdbcType="VARCHAR" />
    <result column="song_time" property="songTime" jdbcType="VARCHAR" />
    <result column="lyrics" property="lyrics" jdbcType="VARCHAR" />
    <result column="singer" property="singer" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="listen_count" property="listenCount" jdbcType="INTEGER" />
    <result column="album" property="album" jdbcType="VARCHAR" />
    <result column="album_art" property="albumArt" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, name, url, song_time, lyrics, singer, description, listen_count, album, album_art, 
    create_time, modify_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="xyz.guqing.goblin.entity.MusicExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from music
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from music
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from music
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="xyz.guqing.goblin.entity.MusicExample" >
    delete from music
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="xyz.guqing.goblin.entity.Music" >
    insert into music (id, name, url, 
      song_time, lyrics, singer, 
      description, listen_count, album, 
      album_art, create_time, modify_time
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, 
      #{songTime,jdbcType=VARCHAR}, #{lyrics,jdbcType=VARCHAR}, #{singer,jdbcType=VARCHAR}, 
      #{description,jdbcType=VARCHAR}, #{listenCount,jdbcType=INTEGER}, #{album,jdbcType=VARCHAR}, 
      #{albumArt,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="xyz.guqing.goblin.entity.Music" >
    insert into music
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="url != null" >
        url,
      </if>
      <if test="songTime != null" >
        song_time,
      </if>
      <if test="lyrics != null" >
        lyrics,
      </if>
      <if test="singer != null" >
        singer,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="listenCount != null" >
        listen_count,
      </if>
      <if test="album != null" >
        album,
      </if>
      <if test="albumArt != null" >
        album_art,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="modifyTime != null" >
        modify_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="url != null" >
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="songTime != null" >
        #{songTime,jdbcType=VARCHAR},
      </if>
      <if test="lyrics != null" >
        #{lyrics,jdbcType=VARCHAR},
      </if>
      <if test="singer != null" >
        #{singer,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="listenCount != null" >
        #{listenCount,jdbcType=INTEGER},
      </if>
      <if test="album != null" >
        #{album,jdbcType=VARCHAR},
      </if>
      <if test="albumArt != null" >
        #{albumArt,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="xyz.guqing.goblin.entity.MusicExample" resultType="java.lang.Integer" >
    select count(*) from music
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update music
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.url != null" >
        url = #{record.url,jdbcType=VARCHAR},
      </if>
      <if test="record.songTime != null" >
        song_time = #{record.songTime,jdbcType=VARCHAR},
      </if>
      <if test="record.lyrics != null" >
        lyrics = #{record.lyrics,jdbcType=VARCHAR},
      </if>
      <if test="record.singer != null" >
        singer = #{record.singer,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.listenCount != null" >
        listen_count = #{record.listenCount,jdbcType=INTEGER},
      </if>
      <if test="record.album != null" >
        album = #{record.album,jdbcType=VARCHAR},
      </if>
      <if test="record.albumArt != null" >
        album_art = #{record.albumArt,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyTime != null" >
        modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update music
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      url = #{record.url,jdbcType=VARCHAR},
      song_time = #{record.songTime,jdbcType=VARCHAR},
      lyrics = #{record.lyrics,jdbcType=VARCHAR},
      singer = #{record.singer,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      listen_count = #{record.listenCount,jdbcType=INTEGER},
      album = #{record.album,jdbcType=VARCHAR},
      album_art = #{record.albumArt,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      modify_time = #{record.modifyTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="xyz.guqing.goblin.entity.Music" >
    update music
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="url != null" >
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="songTime != null" >
        song_time = #{songTime,jdbcType=VARCHAR},
      </if>
      <if test="lyrics != null" >
        lyrics = #{lyrics,jdbcType=VARCHAR},
      </if>
      <if test="singer != null" >
        singer = #{singer,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="listenCount != null" >
        listen_count = #{listenCount,jdbcType=INTEGER},
      </if>
      <if test="album != null" >
        album = #{album,jdbcType=VARCHAR},
      </if>
      <if test="albumArt != null" >
        album_art = #{albumArt,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null" >
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="xyz.guqing.goblin.entity.Music" >
    update music
    set name = #{name,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      song_time = #{songTime,jdbcType=VARCHAR},
      lyrics = #{lyrics,jdbcType=VARCHAR},
      singer = #{singer,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      listen_count = #{listenCount,jdbcType=INTEGER},
      album = #{album,jdbcType=VARCHAR},
      album_art = #{albumArt,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>