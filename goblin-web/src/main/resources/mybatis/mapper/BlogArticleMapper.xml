<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="xyz.guqing.goblin.mapper.BlogArticleMapper" >
  <resultMap id="BaseResultMap" type="xyz.guqing.goblin.entity.BlogArticle" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="category_id" property="categoryId" jdbcType="VARCHAR" />
    <result column="source_url" property="sourceUrl" jdbcType="VARCHAR" />
    <result column="summary" property="summary" jdbcType="VARCHAR" />
    <result column="cover_url" property="coverUrl" jdbcType="VARCHAR" />
    <result column="keyword" property="keyword" jdbcType="VARCHAR" />
    <result column="article_id_array" property="articleIdArray" jdbcType="VARCHAR" />
    <result column="click_count" property="clickCount" jdbcType="INTEGER" />
    <result column="sort_index" property="sortIndex" jdbcType="INTEGER" />
    <result column="commend_flag" property="commendFlag" jdbcType="INTEGER" />
    <result column="comment_flag" property="commentFlag" jdbcType="INTEGER" />
    <result column="tag" property="tag" jdbcType="VARCHAR" />
    <result column="comment_count" property="commentCount" jdbcType="INTEGER" />
    <result column="share_count" property="shareCount" jdbcType="INTEGER" />
    <result column="last_comment_time" property="lastCommentTime" jdbcType="INTEGER" />
    <result column="ip" property="ip" jdbcType="VARCHAR" />
    <result column="source" property="source" jdbcType="INTEGER" />
    <result column="visible" property="visible" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="extra_cid" property="extraCid" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, title, category_id, source_url, summary, cover_url, keyword, article_id_array, 
    click_count, sort_index, commend_flag, comment_flag, tag, comment_count, share_count, 
    last_comment_time, ip, source, visible, status, extra_cid, create_time, modify_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="xyz.guqing.goblin.entity.BlogArticleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from blog_article
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from blog_article
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from blog_article
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="xyz.guqing.goblin.entity.BlogArticleExample" >
    delete from blog_article
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="xyz.guqing.goblin.entity.BlogArticle" >
    insert into blog_article (id, title, category_id, 
      source_url, summary, cover_url, 
      keyword, article_id_array, click_count, 
      sort_index, commend_flag, comment_flag, 
      tag, comment_count, share_count, 
      last_comment_time, ip, source, 
      visible, status, extra_cid, 
      create_time, modify_time)
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{categoryId,jdbcType=VARCHAR}, 
      #{sourceUrl,jdbcType=VARCHAR}, #{summary,jdbcType=VARCHAR}, #{coverUrl,jdbcType=VARCHAR}, 
      #{keyword,jdbcType=VARCHAR}, #{articleIdArray,jdbcType=VARCHAR}, #{clickCount,jdbcType=INTEGER}, 
      #{sortIndex,jdbcType=INTEGER}, #{commendFlag,jdbcType=INTEGER}, #{commentFlag,jdbcType=INTEGER}, 
      #{tag,jdbcType=VARCHAR}, #{commentCount,jdbcType=INTEGER}, #{shareCount,jdbcType=INTEGER}, 
      #{lastCommentTime,jdbcType=INTEGER}, #{ip,jdbcType=VARCHAR}, #{source,jdbcType=INTEGER}, 
      #{visible,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{extraCid,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="xyz.guqing.goblin.entity.BlogArticle" >
    insert into blog_article
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="categoryId != null" >
        category_id,
      </if>
      <if test="sourceUrl != null" >
        source_url,
      </if>
      <if test="summary != null" >
        summary,
      </if>
      <if test="coverUrl != null" >
        cover_url,
      </if>
      <if test="keyword != null" >
        keyword,
      </if>
      <if test="articleIdArray != null" >
        article_id_array,
      </if>
      <if test="clickCount != null" >
        click_count,
      </if>
      <if test="sortIndex != null" >
        sort_index,
      </if>
      <if test="commendFlag != null" >
        commend_flag,
      </if>
      <if test="commentFlag != null" >
        comment_flag,
      </if>
      <if test="tag != null" >
        tag,
      </if>
      <if test="commentCount != null" >
        comment_count,
      </if>
      <if test="shareCount != null" >
        share_count,
      </if>
      <if test="lastCommentTime != null" >
        last_comment_time,
      </if>
      <if test="ip != null" >
        ip,
      </if>
      <if test="source != null" >
        source,
      </if>
      <if test="visible != null" >
        visible,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="extraCid != null" >
        extra_cid,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="modifyTime != null" >
        modify_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="categoryId != null" >
        #{categoryId,jdbcType=VARCHAR},
      </if>
      <if test="sourceUrl != null" >
        #{sourceUrl,jdbcType=VARCHAR},
      </if>
      <if test="summary != null" >
        #{summary,jdbcType=VARCHAR},
      </if>
      <if test="coverUrl != null" >
        #{coverUrl,jdbcType=VARCHAR},
      </if>
      <if test="keyword != null" >
        #{keyword,jdbcType=VARCHAR},
      </if>
      <if test="articleIdArray != null" >
        #{articleIdArray,jdbcType=VARCHAR},
      </if>
      <if test="clickCount != null" >
        #{clickCount,jdbcType=INTEGER},
      </if>
      <if test="sortIndex != null" >
        #{sortIndex,jdbcType=INTEGER},
      </if>
      <if test="commendFlag != null" >
        #{commendFlag,jdbcType=INTEGER},
      </if>
      <if test="commentFlag != null" >
        #{commentFlag,jdbcType=INTEGER},
      </if>
      <if test="tag != null" >
        #{tag,jdbcType=VARCHAR},
      </if>
      <if test="commentCount != null" >
        #{commentCount,jdbcType=INTEGER},
      </if>
      <if test="shareCount != null" >
        #{shareCount,jdbcType=INTEGER},
      </if>
      <if test="lastCommentTime != null" >
        #{lastCommentTime,jdbcType=INTEGER},
      </if>
      <if test="ip != null" >
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="source != null" >
        #{source,jdbcType=INTEGER},
      </if>
      <if test="visible != null" >
        #{visible,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="extraCid != null" >
        #{extraCid,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="xyz.guqing.goblin.entity.BlogArticleExample" resultType="java.lang.Integer" >
    select count(*) from blog_article
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update blog_article
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.categoryId != null" >
        category_id = #{record.categoryId,jdbcType=VARCHAR},
      </if>
      <if test="record.sourceUrl != null" >
        source_url = #{record.sourceUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.summary != null" >
        summary = #{record.summary,jdbcType=VARCHAR},
      </if>
      <if test="record.coverUrl != null" >
        cover_url = #{record.coverUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.keyword != null" >
        keyword = #{record.keyword,jdbcType=VARCHAR},
      </if>
      <if test="record.articleIdArray != null" >
        article_id_array = #{record.articleIdArray,jdbcType=VARCHAR},
      </if>
      <if test="record.clickCount != null" >
        click_count = #{record.clickCount,jdbcType=INTEGER},
      </if>
      <if test="record.sortIndex != null" >
        sort_index = #{record.sortIndex,jdbcType=INTEGER},
      </if>
      <if test="record.commendFlag != null" >
        commend_flag = #{record.commendFlag,jdbcType=INTEGER},
      </if>
      <if test="record.commentFlag != null" >
        comment_flag = #{record.commentFlag,jdbcType=INTEGER},
      </if>
      <if test="record.tag != null" >
        tag = #{record.tag,jdbcType=VARCHAR},
      </if>
      <if test="record.commentCount != null" >
        comment_count = #{record.commentCount,jdbcType=INTEGER},
      </if>
      <if test="record.shareCount != null" >
        share_count = #{record.shareCount,jdbcType=INTEGER},
      </if>
      <if test="record.lastCommentTime != null" >
        last_comment_time = #{record.lastCommentTime,jdbcType=INTEGER},
      </if>
      <if test="record.ip != null" >
        ip = #{record.ip,jdbcType=VARCHAR},
      </if>
      <if test="record.source != null" >
        source = #{record.source,jdbcType=INTEGER},
      </if>
      <if test="record.visible != null" >
        visible = #{record.visible,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.extraCid != null" >
        extra_cid = #{record.extraCid,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyTime != null" >
        modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update blog_article
    set id = #{record.id,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      category_id = #{record.categoryId,jdbcType=VARCHAR},
      source_url = #{record.sourceUrl,jdbcType=VARCHAR},
      summary = #{record.summary,jdbcType=VARCHAR},
      cover_url = #{record.coverUrl,jdbcType=VARCHAR},
      keyword = #{record.keyword,jdbcType=VARCHAR},
      article_id_array = #{record.articleIdArray,jdbcType=VARCHAR},
      click_count = #{record.clickCount,jdbcType=INTEGER},
      sort_index = #{record.sortIndex,jdbcType=INTEGER},
      commend_flag = #{record.commendFlag,jdbcType=INTEGER},
      comment_flag = #{record.commentFlag,jdbcType=INTEGER},
      tag = #{record.tag,jdbcType=VARCHAR},
      comment_count = #{record.commentCount,jdbcType=INTEGER},
      share_count = #{record.shareCount,jdbcType=INTEGER},
      last_comment_time = #{record.lastCommentTime,jdbcType=INTEGER},
      ip = #{record.ip,jdbcType=VARCHAR},
      source = #{record.source,jdbcType=INTEGER},
      visible = #{record.visible,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      extra_cid = #{record.extraCid,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      modify_time = #{record.modifyTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="xyz.guqing.goblin.entity.BlogArticle" >
    update blog_article
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="categoryId != null" >
        category_id = #{categoryId,jdbcType=VARCHAR},
      </if>
      <if test="sourceUrl != null" >
        source_url = #{sourceUrl,jdbcType=VARCHAR},
      </if>
      <if test="summary != null" >
        summary = #{summary,jdbcType=VARCHAR},
      </if>
      <if test="coverUrl != null" >
        cover_url = #{coverUrl,jdbcType=VARCHAR},
      </if>
      <if test="keyword != null" >
        keyword = #{keyword,jdbcType=VARCHAR},
      </if>
      <if test="articleIdArray != null" >
        article_id_array = #{articleIdArray,jdbcType=VARCHAR},
      </if>
      <if test="clickCount != null" >
        click_count = #{clickCount,jdbcType=INTEGER},
      </if>
      <if test="sortIndex != null" >
        sort_index = #{sortIndex,jdbcType=INTEGER},
      </if>
      <if test="commendFlag != null" >
        commend_flag = #{commendFlag,jdbcType=INTEGER},
      </if>
      <if test="commentFlag != null" >
        comment_flag = #{commentFlag,jdbcType=INTEGER},
      </if>
      <if test="tag != null" >
        tag = #{tag,jdbcType=VARCHAR},
      </if>
      <if test="commentCount != null" >
        comment_count = #{commentCount,jdbcType=INTEGER},
      </if>
      <if test="shareCount != null" >
        share_count = #{shareCount,jdbcType=INTEGER},
      </if>
      <if test="lastCommentTime != null" >
        last_comment_time = #{lastCommentTime,jdbcType=INTEGER},
      </if>
      <if test="ip != null" >
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="source != null" >
        source = #{source,jdbcType=INTEGER},
      </if>
      <if test="visible != null" >
        visible = #{visible,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="extraCid != null" >
        extra_cid = #{extraCid,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null" >
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="xyz.guqing.goblin.entity.BlogArticle" >
    update blog_article
    set title = #{title,jdbcType=VARCHAR},
      category_id = #{categoryId,jdbcType=VARCHAR},
      source_url = #{sourceUrl,jdbcType=VARCHAR},
      summary = #{summary,jdbcType=VARCHAR},
      cover_url = #{coverUrl,jdbcType=VARCHAR},
      keyword = #{keyword,jdbcType=VARCHAR},
      article_id_array = #{articleIdArray,jdbcType=VARCHAR},
      click_count = #{clickCount,jdbcType=INTEGER},
      sort_index = #{sortIndex,jdbcType=INTEGER},
      commend_flag = #{commendFlag,jdbcType=INTEGER},
      comment_flag = #{commentFlag,jdbcType=INTEGER},
      tag = #{tag,jdbcType=VARCHAR},
      comment_count = #{commentCount,jdbcType=INTEGER},
      share_count = #{shareCount,jdbcType=INTEGER},
      last_comment_time = #{lastCommentTime,jdbcType=INTEGER},
      ip = #{ip,jdbcType=VARCHAR},
      source = #{source,jdbcType=INTEGER},
      visible = #{visible,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      extra_cid = #{extraCid,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>