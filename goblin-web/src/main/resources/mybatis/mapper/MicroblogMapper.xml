<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="xyz.guqing.goblin.mapper.MicroblogMapper" >
  <resultMap id="BaseResultMap" type="xyz.guqing.goblin.entity.Microblog" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="location" property="location" jdbcType="VARCHAR" />
    <result column="lon" property="lon" jdbcType="DOUBLE" />
    <result column="lat" property="lat" jdbcType="DOUBLE" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="images" property="images" jdbcType="VARCHAR" />
    <result column="videos" property="videos" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="sort_index" property="sortIndex" jdbcType="BIGINT" />
    <result column="is_top" property="isTop" jdbcType="INTEGER" />
    <result column="is_open" property="isOpen" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
    <result column="heart_count" property="heartCount" jdbcType="INTEGER" />
    <result column="share_count" property="shareCount" jdbcType="INTEGER" />
    <result column="visit_count" property="visitCount" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, content, location, lon, lat, address, images, videos, status, sort_index, is_top, 
    is_open, create_time, modify_time, heart_count, share_count, visit_count
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="xyz.guqing.goblin.entity.MicroblogExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from microblog
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from microblog
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from microblog
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="xyz.guqing.goblin.entity.MicroblogExample" >
    delete from microblog
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="xyz.guqing.goblin.entity.Microblog" >
    insert into microblog (id, content, location, 
      lon, lat, address, images, 
      videos, status, sort_index, 
      is_top, is_open, create_time, 
      modify_time, heart_count, share_count, 
      visit_count)
    values (#{id,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, #{location,jdbcType=VARCHAR}, 
      #{lon,jdbcType=DOUBLE}, #{lat,jdbcType=DOUBLE}, #{address,jdbcType=VARCHAR}, #{images,jdbcType=VARCHAR}, 
      #{videos,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{sortIndex,jdbcType=BIGINT}, 
      #{isTop,jdbcType=INTEGER}, #{isOpen,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{modifyTime,jdbcType=TIMESTAMP}, #{heartCount,jdbcType=INTEGER}, #{shareCount,jdbcType=INTEGER}, 
      #{visitCount,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="xyz.guqing.goblin.entity.Microblog" >
    insert into microblog
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="location != null" >
        location,
      </if>
      <if test="lon != null" >
        lon,
      </if>
      <if test="lat != null" >
        lat,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="images != null" >
        images,
      </if>
      <if test="videos != null" >
        videos,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="sortIndex != null" >
        sort_index,
      </if>
      <if test="isTop != null" >
        is_top,
      </if>
      <if test="isOpen != null" >
        is_open,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="modifyTime != null" >
        modify_time,
      </if>
      <if test="heartCount != null" >
        heart_count,
      </if>
      <if test="shareCount != null" >
        share_count,
      </if>
      <if test="visitCount != null" >
        visit_count,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="location != null" >
        #{location,jdbcType=VARCHAR},
      </if>
      <if test="lon != null" >
        #{lon,jdbcType=DOUBLE},
      </if>
      <if test="lat != null" >
        #{lat,jdbcType=DOUBLE},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="images != null" >
        #{images,jdbcType=VARCHAR},
      </if>
      <if test="videos != null" >
        #{videos,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="sortIndex != null" >
        #{sortIndex,jdbcType=BIGINT},
      </if>
      <if test="isTop != null" >
        #{isTop,jdbcType=INTEGER},
      </if>
      <if test="isOpen != null" >
        #{isOpen,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="heartCount != null" >
        #{heartCount,jdbcType=INTEGER},
      </if>
      <if test="shareCount != null" >
        #{shareCount,jdbcType=INTEGER},
      </if>
      <if test="visitCount != null" >
        #{visitCount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="xyz.guqing.goblin.entity.MicroblogExample" resultType="java.lang.Integer" >
    select count(*) from microblog
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update microblog
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.location != null" >
        location = #{record.location,jdbcType=VARCHAR},
      </if>
      <if test="record.lon != null" >
        lon = #{record.lon,jdbcType=DOUBLE},
      </if>
      <if test="record.lat != null" >
        lat = #{record.lat,jdbcType=DOUBLE},
      </if>
      <if test="record.address != null" >
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.images != null" >
        images = #{record.images,jdbcType=VARCHAR},
      </if>
      <if test="record.videos != null" >
        videos = #{record.videos,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.sortIndex != null" >
        sort_index = #{record.sortIndex,jdbcType=BIGINT},
      </if>
      <if test="record.isTop != null" >
        is_top = #{record.isTop,jdbcType=INTEGER},
      </if>
      <if test="record.isOpen != null" >
        is_open = #{record.isOpen,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyTime != null" >
        modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.heartCount != null" >
        heart_count = #{record.heartCount,jdbcType=INTEGER},
      </if>
      <if test="record.shareCount != null" >
        share_count = #{record.shareCount,jdbcType=INTEGER},
      </if>
      <if test="record.visitCount != null" >
        visit_count = #{record.visitCount,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update microblog
    set id = #{record.id,jdbcType=INTEGER},
      content = #{record.content,jdbcType=VARCHAR},
      location = #{record.location,jdbcType=VARCHAR},
      lon = #{record.lon,jdbcType=DOUBLE},
      lat = #{record.lat,jdbcType=DOUBLE},
      address = #{record.address,jdbcType=VARCHAR},
      images = #{record.images,jdbcType=VARCHAR},
      videos = #{record.videos,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      sort_index = #{record.sortIndex,jdbcType=BIGINT},
      is_top = #{record.isTop,jdbcType=INTEGER},
      is_open = #{record.isOpen,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      heart_count = #{record.heartCount,jdbcType=INTEGER},
      share_count = #{record.shareCount,jdbcType=INTEGER},
      visit_count = #{record.visitCount,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="xyz.guqing.goblin.entity.Microblog" >
    update microblog
    <set >
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="location != null" >
        location = #{location,jdbcType=VARCHAR},
      </if>
      <if test="lon != null" >
        lon = #{lon,jdbcType=DOUBLE},
      </if>
      <if test="lat != null" >
        lat = #{lat,jdbcType=DOUBLE},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="images != null" >
        images = #{images,jdbcType=VARCHAR},
      </if>
      <if test="videos != null" >
        videos = #{videos,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="sortIndex != null" >
        sort_index = #{sortIndex,jdbcType=BIGINT},
      </if>
      <if test="isTop != null" >
        is_top = #{isTop,jdbcType=INTEGER},
      </if>
      <if test="isOpen != null" >
        is_open = #{isOpen,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null" >
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="heartCount != null" >
        heart_count = #{heartCount,jdbcType=INTEGER},
      </if>
      <if test="shareCount != null" >
        share_count = #{shareCount,jdbcType=INTEGER},
      </if>
      <if test="visitCount != null" >
        visit_count = #{visitCount,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="xyz.guqing.goblin.entity.Microblog" >
    update microblog
    set content = #{content,jdbcType=VARCHAR},
      location = #{location,jdbcType=VARCHAR},
      lon = #{lon,jdbcType=DOUBLE},
      lat = #{lat,jdbcType=DOUBLE},
      address = #{address,jdbcType=VARCHAR},
      images = #{images,jdbcType=VARCHAR},
      videos = #{videos,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      sort_index = #{sortIndex,jdbcType=BIGINT},
      is_top = #{isTop,jdbcType=INTEGER},
      is_open = #{isOpen,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      heart_count = #{heartCount,jdbcType=INTEGER},
      share_count = #{shareCount,jdbcType=INTEGER},
      visit_count = #{visitCount,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>